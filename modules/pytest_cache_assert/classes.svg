<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (20230121.1956)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="5563pt" height="304pt"
 viewBox="0.00 0.00 5563.00 304.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 300)">
<title>classes</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-300 5559,-300 5559,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="320.5,-166.5 320.5,-295.5 488.5,-295.5 488.5,-166.5 320.5,-166.5"/>
<text text-anchor="start" x="368" y="-280.3" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="320.5,-272.5 488.5,-272.5"/>
<text text-anchor="start" x="328.5" y="-257.3" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="328.5" y="-242.3" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="328.5" y="-227.3" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="328.5" y="-212.3" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="328.5" y="-197.3" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="320.5,-189.5 488.5,-189.5"/>
<text text-anchor="start" x="402.5" y="-174.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="638,-8 638,-107 1097,-107 1097,-8 638,-8"/>
<text text-anchor="start" x="837" y="-91.8" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="638,-84 1097,-84"/>
<text text-anchor="start" x="755" y="-68.8" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="755" y="-53.8" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="638,-46 1097,-46"/>
<text text-anchor="start" x="646" y="-30.8" font-family="Times,serif" font-size="14.00">build_re(pattern: List[str], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="646" y="-15.8" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1115.5,-23 1115.5,-92 1281.5,-92 1281.5,-23 1115.5,-23"/>
<text text-anchor="start" x="1123.5" y="-76.8" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1115.5,-69 1281.5,-69"/>
<text text-anchor="start" x="1183" y="-53.8" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1115.5,-46 1281.5,-46"/>
<text text-anchor="start" x="1196.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-114.5 491,-114.5 491,-0.5 0,-0.5"/>
<text text-anchor="start" x="200" y="-99.3" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="0,-91.5 491,-91.5"/>
<polyline fill="none" stroke="black" points="0,-68.5 491,-68.5"/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M297.12,-114.18C309.84,-127.9 323.65,-142.8 337,-157.19"/>
<polygon fill="black" stroke="black" points="336.92,-157.1 343.93,-158.78 345.08,-165.9 338.06,-164.22 336.92,-157.1"/>
<text text-anchor="middle" x="357.5" y="-136.8" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1299.5,-23 1299.5,-92 1381.5,-92 1381.5,-23 1299.5,-23"/>
<text text-anchor="start" x="1307.5" y="-76.8" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1299.5,-69 1381.5,-69"/>
<text text-anchor="start" x="1325" y="-53.8" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1299.5,-46 1381.5,-46"/>
<text text-anchor="start" x="1338.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node6" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="1400,-15.5 1400,-99.5 1583,-99.5 1583,-15.5 1400,-15.5"/>
<text text-anchor="start" x="1472.5" y="-84.3" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1400,-76.5 1583,-76.5"/>
<text text-anchor="start" x="1408" y="-61.3" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="1408" y="-46.3" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="1400,-38.5 1583,-38.5"/>
<text text-anchor="start" x="1489.5" y="-23.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="1601,-23 1601,-92 1784,-92 1784,-23 1601,-23"/>
<text text-anchor="start" x="1673.5" y="-76.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1601,-69 1784,-69"/>
<text text-anchor="start" x="1609" y="-53.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<polyline fill="none" stroke="black" points="1601,-46 1784,-46"/>
<text text-anchor="start" x="1690.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="1802.5,-15.5 1802.5,-99.5 1912.5,-99.5 1912.5,-15.5 1802.5,-15.5"/>
<text text-anchor="start" x="1830" y="-84.3" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="1802.5,-76.5 1912.5,-76.5"/>
<text text-anchor="start" x="1810.5" y="-61.3" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="1810.5" y="-46.3" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="1802.5,-38.5 1912.5,-38.5"/>
<text text-anchor="start" x="1855.5" y="-23.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="1930.5,-23 1930.5,-92 2042.5,-92 2042.5,-23 1930.5,-23"/>
<text text-anchor="start" x="1938.5" y="-76.8" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="1930.5,-69 2042.5,-69"/>
<polyline fill="none" stroke="black" points="1930.5,-46 2042.5,-46"/>
<text text-anchor="start" x="1939.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2061,-15.5 2061,-99.5 2356,-99.5 2356,-15.5 2061,-15.5"/>
<text text-anchor="start" x="2177" y="-84.3" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2061,-76.5 2356,-76.5"/>
<text text-anchor="start" x="2159.5" y="-61.3" font-family="Times,serif" font-size="14.00">results : Dict, dict</text>
<polyline fill="none" stroke="black" points="2061,-53.5 2356,-53.5"/>
<text text-anchor="start" x="2069" y="-38.3" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2069" y="-23.3" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="2374,-0.5 2374,-114.5 2865,-114.5 2865,-0.5 2374,-0.5"/>
<text text-anchor="start" x="2556.5" y="-99.3" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="2374,-91.5 2865,-91.5"/>
<polyline fill="none" stroke="black" points="2374,-68.5 2865,-68.5"/>
<text text-anchor="start" x="2382" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="2382" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="2382" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="2382" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="2883.5,-23 2883.5,-92 3035.5,-92 3035.5,-23 2883.5,-23"/>
<text text-anchor="start" x="2891.5" y="-76.8" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="2883.5,-69 3035.5,-69"/>
<polyline fill="none" stroke="black" points="2883.5,-46 3035.5,-46"/>
<text text-anchor="start" x="2957.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3054,-23 3054,-92 3149,-92 3149,-23 3054,-23"/>
<text text-anchor="start" x="3062" y="-76.8" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3054,-69 3149,-69"/>
<polyline fill="none" stroke="black" points="3054,-46 3149,-46"/>
<text text-anchor="start" x="3099.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3167,-23 3167,-92 3238,-92 3238,-23 3167,-23"/>
<text text-anchor="start" x="3175" y="-76.8" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3167,-69 3238,-69"/>
<polyline fill="none" stroke="black" points="3167,-46 3238,-46"/>
<text text-anchor="start" x="3200.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="3256.5,-23 3256.5,-92 3832.5,-92 3832.5,-23 3256.5,-23"/>
<text text-anchor="start" x="3491.5" y="-76.8" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="3256.5,-69 3832.5,-69"/>
<text text-anchor="start" x="3482.5" y="-53.8" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="3256.5,-46 3832.5,-46"/>
<text text-anchor="start" x="3264.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node16" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="3851,-8 3851,-107 4256,-107 4256,-8 3851,-8"/>
<text text-anchor="start" x="4016" y="-91.8" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="3851,-84 4256,-84"/>
<text text-anchor="start" x="3963.5" y="-68.8" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="3963.5" y="-53.8" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="3963.5" y="-38.8" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="3851,-31 4256,-31"/>
<text text-anchor="start" x="3859" y="-15.8" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.UnconvertableError -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.serializer.UnconvertableError</title>
<polygon fill="none" stroke="black" points="4274,-23 4274,-92 4399,-92 4399,-23 4274,-23"/>
<text text-anchor="start" x="4282" y="-76.8" font-family="Times,serif" font-size="14.00" fill="red">UnconvertableError</text>
<polyline fill="none" stroke="black" points="4274,-69 4399,-69"/>
<polyline fill="none" stroke="black" points="4274,-46 4399,-46"/>
<text text-anchor="start" x="4334.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="509.5,-23 509.5,-92 619.5,-92 619.5,-23 509.5,-23"/>
<text text-anchor="start" x="525.5" y="-76.8" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="509.5,-69 619.5,-69"/>
<polyline fill="none" stroke="black" points="509.5,-46 619.5,-46"/>
<text text-anchor="start" x="517.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M533.27,-91.97C515.85,-110.65 493.43,-134.68 472.2,-157.44"/>
<polygon fill="black" stroke="black" points="472.31,-157.32 471.14,-164.44 464.12,-166.1 465.29,-158.98 472.31,-157.32"/>
<text text-anchor="middle" x="518" y="-136.8" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="4417.5,-0.5 4417.5,-114.5 4643.5,-114.5 4643.5,-0.5 4417.5,-0.5"/>
<text text-anchor="start" x="4516.5" y="-99.3" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="4417.5,-91.5 4643.5,-91.5"/>
<polyline fill="none" stroke="black" points="4417.5,-68.5 4643.5,-68.5"/>
<text text-anchor="start" x="4425.5" y="-53.3" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="4425.5" y="-38.3" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="4425.5" y="-23.3" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="4425.5" y="-8.3" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="4662,-23 4662,-92 4805,-92 4805,-23 4662,-23"/>
<text text-anchor="start" x="4670" y="-76.8" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="4662,-69 4805,-69"/>
<polyline fill="none" stroke="black" points="4662,-46 4805,-46"/>
<text text-anchor="start" x="4671.5" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="4823,-15.5 4823,-99.5 5184,-99.5 5184,-15.5 4823,-15.5"/>
<text text-anchor="start" x="4954.5" y="-84.3" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="4823,-76.5 5184,-76.5"/>
<text text-anchor="start" x="4949" y="-61.3" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="4823,-53.5 5184,-53.5"/>
<text text-anchor="start" x="4831" y="-38.3" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="4831" y="-23.3" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="5202,-0.5 5202,-114.5 5555,-114.5 5555,-0.5 5202,-0.5"/>
<text text-anchor="start" x="5345" y="-99.3" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="5202,-91.5 5555,-91.5"/>
<text text-anchor="start" x="5231" y="-76.3" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5231" y="-61.3" font-family="Times,serif" font-size="14.00">converter_lookup : dict, defaultdict</text>
<text text-anchor="start" x="5231" y="-46.3" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="5202,-38.5 5555,-38.5"/>
<text text-anchor="start" x="5210" y="-23.3" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5210" y="-8.3" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
