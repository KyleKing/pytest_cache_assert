<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.4 (20221203.1631)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="5534pt" height="305pt"
 viewBox="0.00 0.00 5533.50 305.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 301)">
<title>classes</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-301 5529.5,-301 5529.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="320.5,-167.5 320.5,-296.5 488.5,-296.5 488.5,-167.5 320.5,-167.5"/>
<text text-anchor="middle" x="404.5" y="-281.3" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="320.5,-273.5 488.5,-273.5"/>
<text text-anchor="start" x="328.5" y="-258.3" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="328.5" y="-243.3" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="328.5" y="-228.3" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="328.5" y="-213.3" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="328.5" y="-198.3" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="320.5,-190.5 488.5,-190.5"/>
<text text-anchor="middle" x="404.5" y="-175.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="637.5,-8.5 637.5,-107.5 1097.5,-107.5 1097.5,-8.5 637.5,-8.5"/>
<text text-anchor="middle" x="867.5" y="-92.3" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="637.5,-84.5 1097.5,-84.5"/>
<text text-anchor="start" x="645.5" y="-69.3" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="645.5" y="-54.3" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="637.5,-46.5 1097.5,-46.5"/>
<text text-anchor="start" x="645.5" y="-31.3" font-family="Times,serif" font-size="14.00">build_re(pattern: List[str], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="645.5" y="-16.3" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1115.5,-23.5 1115.5,-92.5 1281.5,-92.5 1281.5,-23.5 1115.5,-23.5"/>
<text text-anchor="middle" x="1198.5" y="-77.3" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1115.5,-69.5 1281.5,-69.5"/>
<text text-anchor="start" x="1123.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1115.5,-46.5 1281.5,-46.5"/>
<text text-anchor="middle" x="1198.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-115.5 491,-115.5 491,-0.5 0,-0.5"/>
<text text-anchor="middle" x="245.5" y="-100.3" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="0,-92.5 491,-92.5"/>
<polyline fill="none" stroke="black" points="0,-68.5 491,-68.5"/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M297.56,-115.32C310.27,-129.06 324.04,-143.96 337.33,-158.34"/>
<polygon fill="black" stroke="black" points="337.23,-158.23 344.24,-159.92 345.38,-167.04 338.37,-165.35 337.23,-158.23"/>
<text text-anchor="middle" x="357.5" y="-137.8" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1299.5,-23.5 1299.5,-92.5 1381.5,-92.5 1381.5,-23.5 1299.5,-23.5"/>
<text text-anchor="middle" x="1340.5" y="-77.3" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1299.5,-69.5 1381.5,-69.5"/>
<text text-anchor="start" x="1307.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1299.5,-46.5 1381.5,-46.5"/>
<text text-anchor="middle" x="1340.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node6" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="1400,-16 1400,-100 1583,-100 1583,-16 1400,-16"/>
<text text-anchor="middle" x="1491.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1400,-77 1583,-77"/>
<text text-anchor="start" x="1408" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="1408" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="1400,-39 1583,-39"/>
<text text-anchor="middle" x="1491.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="1601,-23.5 1601,-92.5 1784,-92.5 1784,-23.5 1601,-23.5"/>
<text text-anchor="middle" x="1692.5" y="-77.3" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1601,-69.5 1784,-69.5"/>
<text text-anchor="start" x="1609" y="-54.3" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<polyline fill="none" stroke="black" points="1601,-46.5 1784,-46.5"/>
<text text-anchor="middle" x="1692.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="1802.5,-16 1802.5,-100 1912.5,-100 1912.5,-16 1802.5,-16"/>
<text text-anchor="middle" x="1857.5" y="-84.8" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="1802.5,-77 1912.5,-77"/>
<text text-anchor="start" x="1810.5" y="-61.8" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="1810.5" y="-46.8" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="1802.5,-39 1912.5,-39"/>
<text text-anchor="middle" x="1857.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="1930.5,-23 1930.5,-93 2042.5,-93 2042.5,-23 1930.5,-23"/>
<text text-anchor="middle" x="1986.5" y="-77.8" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="1930.5,-70 2042.5,-70"/>
<polyline fill="none" stroke="black" points="1930.5,-46 2042.5,-46"/>
<text text-anchor="start" x="1938.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2061,-16 2061,-100 2356,-100 2356,-16 2061,-16"/>
<text text-anchor="middle" x="2208.5" y="-84.8" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2061,-77 2356,-77"/>
<text text-anchor="start" x="2069" y="-61.8" font-family="Times,serif" font-size="14.00">results : Dict, dict</text>
<polyline fill="none" stroke="black" points="2061,-54 2356,-54"/>
<text text-anchor="start" x="2069" y="-38.8" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2069" y="-23.8" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="2374,-0.5 2374,-115.5 2865,-115.5 2865,-0.5 2374,-0.5"/>
<text text-anchor="middle" x="2619.5" y="-100.3" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="2374,-92.5 2865,-92.5"/>
<polyline fill="none" stroke="black" points="2374,-68.5 2865,-68.5"/>
<text text-anchor="start" x="2382" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="2382" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="2382" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="2382" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="2883.5,-23 2883.5,-93 3035.5,-93 3035.5,-23 2883.5,-23"/>
<text text-anchor="middle" x="2959.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="2883.5,-70 3035.5,-70"/>
<polyline fill="none" stroke="black" points="2883.5,-46 3035.5,-46"/>
<text text-anchor="middle" x="2959.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3054,-23 3054,-93 3149,-93 3149,-23 3054,-23"/>
<text text-anchor="middle" x="3101.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3054,-70 3149,-70"/>
<polyline fill="none" stroke="black" points="3054,-46 3149,-46"/>
<text text-anchor="middle" x="3101.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3167,-23 3167,-93 3238,-93 3238,-23 3167,-23"/>
<text text-anchor="middle" x="3202.5" y="-77.8" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3167,-70 3238,-70"/>
<polyline fill="none" stroke="black" points="3167,-46 3238,-46"/>
<text text-anchor="middle" x="3202.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="3256,-23.5 3256,-92.5 3831,-92.5 3831,-23.5 3256,-23.5"/>
<text text-anchor="middle" x="3543.5" y="-77.3" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="3256,-69.5 3831,-69.5"/>
<text text-anchor="start" x="3264" y="-54.3" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="3256,-46.5 3831,-46.5"/>
<text text-anchor="start" x="3264" y="-31.3" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node16" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="3849,-8.5 3849,-107.5 4254,-107.5 4254,-8.5 3849,-8.5"/>
<text text-anchor="middle" x="4051.5" y="-92.3" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="3849,-84.5 4254,-84.5"/>
<text text-anchor="start" x="3857" y="-69.3" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="3857" y="-54.3" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="3857" y="-39.3" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="3849,-31.5 4254,-31.5"/>
<text text-anchor="start" x="3857" y="-16.3" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.Unconvertable -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.serializer.Unconvertable</title>
<polygon fill="none" stroke="black" points="4272.5,-23 4272.5,-93 4368.5,-93 4368.5,-23 4272.5,-23"/>
<text text-anchor="middle" x="4320.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">Unconvertable</text>
<polyline fill="none" stroke="black" points="4272.5,-70 4368.5,-70"/>
<polyline fill="none" stroke="black" points="4272.5,-46 4368.5,-46"/>
<text text-anchor="middle" x="4320.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="509.5,-23 509.5,-93 619.5,-93 619.5,-23 509.5,-23"/>
<text text-anchor="middle" x="564.5" y="-77.8" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="509.5,-70 619.5,-70"/>
<polyline fill="none" stroke="black" points="509.5,-46 619.5,-46"/>
<text text-anchor="start" x="517.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M532.89,-92.98C515.52,-111.65 493.28,-135.57 472.2,-158.22"/>
<polygon fill="black" stroke="black" points="472.36,-158.06 471.2,-165.17 464.18,-166.84 465.34,-159.72 472.36,-158.06"/>
<text text-anchor="middle" x="518" y="-137.8" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="4386.5,-0.5 4386.5,-115.5 4612.5,-115.5 4612.5,-0.5 4386.5,-0.5"/>
<text text-anchor="middle" x="4499.5" y="-100.3" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="4386.5,-92.5 4612.5,-92.5"/>
<polyline fill="none" stroke="black" points="4386.5,-68.5 4612.5,-68.5"/>
<text text-anchor="start" x="4394.5" y="-53.3" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="4394.5" y="-38.3" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="4394.5" y="-23.3" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="4394.5" y="-8.3" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="4631,-23 4631,-93 4774,-93 4774,-23 4631,-23"/>
<text text-anchor="middle" x="4702.5" y="-77.8" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="4631,-70 4774,-70"/>
<polyline fill="none" stroke="black" points="4631,-46 4774,-46"/>
<text text-anchor="start" x="4639" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="4792,-16 4792,-100 5153,-100 5153,-16 4792,-16"/>
<text text-anchor="middle" x="4972.5" y="-84.8" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="4792,-77 5153,-77"/>
<text text-anchor="start" x="4800" y="-61.8" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="4792,-54 5153,-54"/>
<text text-anchor="start" x="4800" y="-38.8" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="4800" y="-23.8" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="5171.5,-1 5171.5,-115 5525.5,-115 5525.5,-1 5171.5,-1"/>
<text text-anchor="middle" x="5348.5" y="-99.8" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="5171.5,-92 5525.5,-92"/>
<text text-anchor="start" x="5179.5" y="-76.8" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5179.5" y="-61.8" font-family="Times,serif" font-size="14.00">converter_lookup : defaultdict, dict</text>
<text text-anchor="start" x="5179.5" y="-46.8" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="5171.5,-39 5525.5,-39"/>
<text text-anchor="start" x="5179.5" y="-23.8" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5179.5" y="-8.8" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
