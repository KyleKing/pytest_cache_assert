<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="6977pt" height="306pt"
 viewBox="0.00 0.00 6976.50 305.80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 301.8)">
<title>classes</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-301.8 6972.5,-301.8 6972.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="407.5,-168.3 407.5,-297.3 623.5,-297.3 623.5,-168.3 407.5,-168.3"/>
<text text-anchor="start" x="469.5" y="-282.1" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="407.5,-274.3 623.5,-274.3 "/>
<text text-anchor="start" x="415.5" y="-259.1" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="415.5" y="-244.1" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="415.5" y="-229.1" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="415.5" y="-214.1" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="415.5" y="-199.1" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="407.5,-191.3 623.5,-191.3 "/>
<text text-anchor="start" x="513" y="-176.1" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="805.5,-8.9 805.5,-107.9 1381.5,-107.9 1381.5,-8.9 805.5,-8.9"/>
<text text-anchor="start" x="1054" y="-92.7" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="805.5,-84.9 1381.5,-84.9 "/>
<text text-anchor="start" x="957" y="-69.7" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="957" y="-54.7" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="805.5,-46.9 1381.5,-46.9 "/>
<text text-anchor="start" x="813.5" y="-31.7" font-family="Times,serif" font-size="14.00">build_re(pattern: List[str], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="813.5" y="-16.7" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1399.5,-23.9 1399.5,-92.9 1609.5,-92.9 1609.5,-23.9 1399.5,-23.9"/>
<text text-anchor="start" x="1407.5" y="-77.7" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1399.5,-69.9 1609.5,-69.9 "/>
<text text-anchor="start" x="1484.5" y="-54.7" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1399.5,-46.9 1609.5,-46.9 "/>
<text text-anchor="start" x="1502" y="-31.7" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-116.3 629,-116.3 629,-0.5 0,-0.5"/>
<text text-anchor="start" x="255.5" y="-101.1" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="0,-93.3 629,-93.3 "/>
<polyline fill="none" stroke="black" points="0,-68.5 629,-68.5 "/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M380.87,-116.33C397.18,-130.31 414.84,-145.47 431.85,-160.05"/>
<polygon fill="black" stroke="black" points="432.1,-160.27 439.26,-161.14 441.21,-168.08 434.05,-167.21 432.1,-160.27"/>
<text text-anchor="middle" x="458" y="-138.6" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1627.5,-23.9 1627.5,-92.9 1729.5,-92.9 1729.5,-23.9 1627.5,-23.9"/>
<text text-anchor="start" x="1635.5" y="-77.7" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1627.5,-69.9 1729.5,-69.9 "/>
<text text-anchor="start" x="1658.5" y="-54.7" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1627.5,-46.9 1729.5,-46.9 "/>
<text text-anchor="start" x="1676" y="-31.7" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node6" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="1747.5,-16.4 1747.5,-100.4 1979.5,-100.4 1979.5,-16.4 1747.5,-16.4"/>
<text text-anchor="start" x="1840.5" y="-85.2" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1747.5,-77.4 1979.5,-77.4 "/>
<text text-anchor="start" x="1755.5" y="-62.2" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="1755.5" y="-47.2" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="1747.5,-39.4 1979.5,-39.4 "/>
<text text-anchor="start" x="1861" y="-24.2" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="1997.5,-23.9 1997.5,-92.9 2229.5,-92.9 2229.5,-23.9 1997.5,-23.9"/>
<text text-anchor="start" x="2090.5" y="-77.7" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1997.5,-69.9 2229.5,-69.9 "/>
<text text-anchor="start" x="2005.5" y="-54.7" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<polyline fill="none" stroke="black" points="1997.5,-46.9 2229.5,-46.9 "/>
<text text-anchor="start" x="2111" y="-31.7" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="2247.5,-16.4 2247.5,-100.4 2381.5,-100.4 2381.5,-16.4 2247.5,-16.4"/>
<text text-anchor="start" x="2278" y="-85.2" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="2247.5,-77.4 2381.5,-77.4 "/>
<text text-anchor="start" x="2255.5" y="-62.2" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="2255.5" y="-47.2" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="2247.5,-39.4 2381.5,-39.4 "/>
<text text-anchor="start" x="2312" y="-24.2" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="2399.5,-23 2399.5,-93.8 2539.5,-93.8 2539.5,-23 2399.5,-23"/>
<text text-anchor="start" x="2409.5" y="-78.6" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="2399.5,-70.8 2539.5,-70.8 "/>
<polyline fill="none" stroke="black" points="2399.5,-46 2539.5,-46 "/>
<text text-anchor="start" x="2407.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2557.5,-16.4 2557.5,-100.4 2939.5,-100.4 2939.5,-16.4 2557.5,-16.4"/>
<text text-anchor="start" x="2709" y="-85.2" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2557.5,-77.4 2939.5,-77.4 "/>
<text text-anchor="start" x="2684" y="-62.2" font-family="Times,serif" font-size="14.00">results : Dict, dict</text>
<polyline fill="none" stroke="black" points="2557.5,-54.4 2939.5,-54.4 "/>
<text text-anchor="start" x="2565.5" y="-39.2" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2565.5" y="-24.2" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="2958,-0.5 2958,-116.3 3587,-116.3 3587,-0.5 2958,-0.5"/>
<text text-anchor="start" x="3193" y="-101.1" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="2958,-93.3 3587,-93.3 "/>
<polyline fill="none" stroke="black" points="2958,-68.5 3587,-68.5 "/>
<text text-anchor="start" x="2966" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="2966" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="2966" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="2966" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="3605,-23 3605,-93.8 3796,-93.8 3796,-23 3605,-23"/>
<text text-anchor="start" x="3613" y="-78.6" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="3605,-70.8 3796,-70.8 "/>
<polyline fill="none" stroke="black" points="3605,-46 3796,-46 "/>
<text text-anchor="start" x="3698" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3814,-23 3814,-93.8 3933,-93.8 3933,-23 3814,-23"/>
<text text-anchor="start" x="3822" y="-78.6" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3814,-70.8 3933,-70.8 "/>
<polyline fill="none" stroke="black" points="3814,-46 3933,-46 "/>
<text text-anchor="start" x="3871" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3951,-23 3951,-93.8 4038,-93.8 4038,-23 3951,-23"/>
<text text-anchor="start" x="3959" y="-78.6" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3951,-70.8 4038,-70.8 "/>
<polyline fill="none" stroke="black" points="3951,-46 4038,-46 "/>
<text text-anchor="start" x="3992" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="4056,-23.9 4056,-92.9 4791,-92.9 4791,-23.9 4056,-23.9"/>
<text text-anchor="start" x="4354" y="-77.7" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="4056,-69.9 4791,-69.9 "/>
<text text-anchor="start" x="4345" y="-54.7" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="4056,-46.9 4791,-46.9 "/>
<text text-anchor="start" x="4064" y="-31.7" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node16" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="4809,-8.9 4809,-107.9 5336,-107.9 5336,-8.9 4809,-8.9"/>
<text text-anchor="start" x="5023" y="-92.7" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="4809,-84.9 5336,-84.9 "/>
<text text-anchor="start" x="4957" y="-69.7" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="4957" y="-54.7" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="4957" y="-39.7" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="4809,-31.9 5336,-31.9 "/>
<text text-anchor="start" x="4817" y="-16.7" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.UnconvertableError -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.serializer.UnconvertableError</title>
<polygon fill="none" stroke="black" points="5354,-23 5354,-93.8 5515,-93.8 5515,-23 5354,-23"/>
<text text-anchor="start" x="5362" y="-78.6" font-family="Times,serif" font-size="14.00" fill="red">UnconvertableError</text>
<polyline fill="none" stroke="black" points="5354,-70.8 5515,-70.8 "/>
<polyline fill="none" stroke="black" points="5354,-46 5515,-46 "/>
<text text-anchor="start" x="5432" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="647.5,-23 647.5,-93.8 787.5,-93.8 787.5,-23 647.5,-23"/>
<text text-anchor="start" x="667.5" y="-78.6" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="647.5,-70.8 787.5,-70.8 "/>
<polyline fill="none" stroke="black" points="647.5,-46 787.5,-46 "/>
<text text-anchor="start" x="655.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M677.11,-93.87C654.86,-112.86 626.39,-137.16 599.56,-160.06"/>
<polygon fill="black" stroke="black" points="599.28,-160.3 597.31,-167.23 590.15,-168.09 592.12,-161.15 599.28,-160.3"/>
<text text-anchor="middle" x="660.5" y="-138.6" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="5533,-0.5 5533,-116.3 5828,-116.3 5828,-0.5 5533,-0.5"/>
<text text-anchor="start" x="5664" y="-101.1" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="5533,-93.3 5828,-93.3 "/>
<polyline fill="none" stroke="black" points="5533,-68.5 5828,-68.5 "/>
<text text-anchor="start" x="5541" y="-53.3" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="5541" y="-38.3" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="5541" y="-23.3" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="5541" y="-8.3" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="5846.5,-23 5846.5,-93.8 6028.5,-93.8 6028.5,-23 5846.5,-23"/>
<text text-anchor="start" x="5854.5" y="-78.6" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="5846.5,-70.8 6028.5,-70.8 "/>
<polyline fill="none" stroke="black" points="5846.5,-46 6028.5,-46 "/>
<text text-anchor="start" x="5860" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="6047,-16.4 6047,-100.4 6510,-100.4 6510,-16.4 6047,-16.4"/>
<text text-anchor="start" x="6216.5" y="-85.2" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="6047,-77.4 6510,-77.4 "/>
<text text-anchor="start" x="6208.5" y="-62.2" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="6047,-54.4 6510,-54.4 "/>
<text text-anchor="start" x="6055" y="-39.2" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="6055" y="-24.2" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="6528.5,-1.4 6528.5,-115.4 6968.5,-115.4 6968.5,-1.4 6528.5,-1.4"/>
<text text-anchor="start" x="6705" y="-100.2" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="6528.5,-92.4 6968.5,-92.4 "/>
<text text-anchor="start" x="6569.5" y="-77.2" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="6569.5" y="-62.2" font-family="Times,serif" font-size="14.00">converter_lookup : defaultdict, dict</text>
<text text-anchor="start" x="6569.5" y="-47.2" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="6528.5,-39.4 6968.5,-39.4 "/>
<text text-anchor="start" x="6536.5" y="-24.2" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="6536.5" y="-9.2" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
