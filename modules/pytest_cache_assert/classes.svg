<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="5611pt" height="413pt"
 viewBox="0.00 0.00 5610.50 413.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 409)">
<title>classes</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-409 5606.5,-409 5606.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="284.5,-275.5 284.5,-404.5 452.5,-404.5 452.5,-275.5 284.5,-275.5"/>
<text text-anchor="middle" x="368.5" y="-389.3" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="284.5,-381.5 452.5,-381.5"/>
<text text-anchor="start" x="292.5" y="-366.3" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="292.5" y="-351.3" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="292.5" y="-336.3" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="292.5" y="-321.3" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="292.5" y="-306.3" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="284.5,-298.5 452.5,-298.5"/>
<text text-anchor="middle" x="368.5" y="-283.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="639.5,-8.5 639.5,-107.5 1175.5,-107.5 1175.5,-8.5 639.5,-8.5"/>
<text text-anchor="middle" x="907.5" y="-92.3" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="639.5,-84.5 1175.5,-84.5"/>
<text text-anchor="start" x="647.5" y="-69.3" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="647.5" y="-54.3" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="639.5,-46.5 1175.5,-46.5"/>
<text text-anchor="start" x="647.5" y="-31.3" font-family="Times,serif" font-size="14.00">build_re(pattern: List[Union[str, Wild]], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="647.5" y="-16.3" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1193.5,-23.5 1193.5,-92.5 1359.5,-92.5 1359.5,-23.5 1193.5,-23.5"/>
<text text-anchor="middle" x="1276.5" y="-77.3" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1193.5,-69.5 1359.5,-69.5"/>
<text text-anchor="start" x="1201.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1193.5,-46.5 1359.5,-46.5"/>
<text text-anchor="middle" x="1276.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStore -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStore</title>
<polygon fill="none" stroke="black" points="1378,-0.5 1378,-115.5 1869,-115.5 1869,-0.5 1378,-0.5"/>
<text text-anchor="middle" x="1623.5" y="-100.3" font-family="Times,serif" font-size="14.00">CacheStore</text>
<polyline fill="none" stroke="black" points="1378,-92.5 1869,-92.5"/>
<polyline fill="none" stroke="black" points="1378,-68.5 1869,-68.5"/>
<text text-anchor="start" x="1386" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="1386" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="1386" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="1386" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="204.5,-153.5 204.5,-223.5 360.5,-223.5 360.5,-153.5 204.5,-153.5"/>
<text text-anchor="middle" x="282.5" y="-208.3" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="204.5,-200.5 360.5,-200.5"/>
<polyline fill="none" stroke="black" points="204.5,-176.5 360.5,-176.5"/>
<text text-anchor="start" x="212.5" y="-161.3" font-family="Times,serif" font-size="14.00">validate(value: Self): Self</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge3" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M302.23,-223.8C309.33,-236.15 317.65,-250.6 325.94,-265.02"/>
<polygon fill="black" stroke="black" points="325.98,-265.08 332.43,-268.28 331.96,-275.48 325.5,-272.27 325.98,-265.08"/>
<text text-anchor="middle" x="352.5" y="-245.8" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node6" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1887.5,-23.5 1887.5,-92.5 1969.5,-92.5 1969.5,-23.5 1887.5,-23.5"/>
<text text-anchor="middle" x="1928.5" y="-77.3" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1887.5,-69.5 1969.5,-69.5"/>
<text text-anchor="start" x="1895.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1887.5,-46.5 1969.5,-46.5"/>
<text text-anchor="middle" x="1928.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="1988,-16 1988,-100 2171,-100 2171,-16 1988,-16"/>
<text text-anchor="middle" x="2079.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1988,-77 2171,-77"/>
<text text-anchor="start" x="1996" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="1996" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="1988,-39 2171,-39"/>
<text text-anchor="middle" x="2079.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="2189,-16 2189,-100 2372,-100 2372,-16 2189,-16"/>
<text text-anchor="middle" x="2280.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="2189,-77 2372,-77"/>
<text text-anchor="start" x="2197" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="2197" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="2189,-39 2372,-39"/>
<text text-anchor="middle" x="2280.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="2390.5,-16 2390.5,-100 2500.5,-100 2500.5,-16 2390.5,-16"/>
<text text-anchor="middle" x="2445.5" y="-84.8" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="2390.5,-77 2500.5,-77"/>
<text text-anchor="start" x="2398.5" y="-61.8" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="2398.5" y="-46.8" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="2390.5,-39 2500.5,-39"/>
<text text-anchor="middle" x="2445.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="509.5,-23 509.5,-93 621.5,-93 621.5,-23 509.5,-23"/>
<text text-anchor="middle" x="565.5" y="-77.8" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="509.5,-70 621.5,-70"/>
<polyline fill="none" stroke="black" points="509.5,-46 621.5,-46"/>
<text text-anchor="start" x="517.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="451.5,-153.5 451.5,-223.5 607.5,-223.5 607.5,-153.5 451.5,-153.5"/>
<text text-anchor="middle" x="529.5" y="-208.3" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="451.5,-200.5 607.5,-200.5"/>
<polyline fill="none" stroke="black" points="451.5,-176.5 607.5,-176.5"/>
<text text-anchor="start" x="459.5" y="-161.3" font-family="Times,serif" font-size="14.00">validate(value: Self): Self</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator&#45;&gt;pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator&#45;&gt;pytest_cache_assert._check_assert.validator.ValidatorType</title>
<path fill="none" stroke="black" d="M555.95,-93.1C551.63,-108.49 546.49,-126.87 541.88,-143.31"/>
<polygon fill="none" stroke="black" points="538.42,-142.67 539.1,-153.24 545.17,-144.56 538.42,-142.67"/>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2519,-16 2519,-100 2814,-100 2814,-16 2519,-16"/>
<text text-anchor="middle" x="2666.5" y="-84.8" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2519,-77 2814,-77"/>
<text text-anchor="start" x="2527" y="-61.8" font-family="Times,serif" font-size="14.00">results : Dict, dict</text>
<polyline fill="none" stroke="black" points="2519,-54 2814,-54"/>
<text text-anchor="start" x="2527" y="-38.8" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2527" y="-23.8" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-115.5 491,-115.5 491,-0.5 0,-0.5"/>
<text text-anchor="middle" x="245.5" y="-100.3" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="0,-92.5 491,-92.5"/>
<polyline fill="none" stroke="black" points="0,-68.5 491,-68.5"/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore&#45;&gt;pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore&#45;&gt;pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<path fill="none" stroke="black" d="M261.84,-115.74C264.51,-125.02 267.24,-134.51 269.81,-143.43"/>
<polygon fill="none" stroke="black" points="266.5,-144.57 272.63,-153.21 273.22,-142.63 266.5,-144.57"/>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="2832.5,-23 2832.5,-93 2984.5,-93 2984.5,-23 2832.5,-23"/>
<text text-anchor="middle" x="2908.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="2832.5,-70 2984.5,-70"/>
<polyline fill="none" stroke="black" points="2832.5,-46 2984.5,-46"/>
<text text-anchor="middle" x="2908.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3003,-23 3003,-93 3098,-93 3098,-23 3003,-23"/>
<text text-anchor="middle" x="3050.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3003,-70 3098,-70"/>
<polyline fill="none" stroke="black" points="3003,-46 3098,-46"/>
<text text-anchor="middle" x="3050.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3116,-23 3116,-93 3187,-93 3187,-23 3116,-23"/>
<text text-anchor="middle" x="3151.5" y="-77.8" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3116,-70 3187,-70"/>
<polyline fill="none" stroke="black" points="3116,-46 3187,-46"/>
<text text-anchor="middle" x="3151.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node16" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="3205,-23.5 3205,-92.5 3780,-92.5 3780,-23.5 3205,-23.5"/>
<text text-anchor="middle" x="3492.5" y="-77.3" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="3205,-69.5 3780,-69.5"/>
<text text-anchor="start" x="3213" y="-54.3" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="3205,-46.5 3780,-46.5"/>
<text text-anchor="start" x="3213" y="-31.3" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node17" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="3798,-8.5 3798,-107.5 4203,-107.5 4203,-8.5 3798,-8.5"/>
<text text-anchor="middle" x="4000.5" y="-92.3" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="3798,-84.5 4203,-84.5"/>
<text text-anchor="start" x="3806" y="-69.3" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="3806" y="-54.3" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="3806" y="-39.3" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="3798,-31.5 4203,-31.5"/>
<text text-anchor="start" x="3806" y="-16.3" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.Unconvertable -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.serializer.Unconvertable</title>
<polygon fill="none" stroke="black" points="4221.5,-23 4221.5,-93 4317.5,-93 4317.5,-23 4221.5,-23"/>
<text text-anchor="middle" x="4269.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">Unconvertable</text>
<polyline fill="none" stroke="black" points="4221.5,-70 4317.5,-70"/>
<polyline fill="none" stroke="black" points="4221.5,-46 4317.5,-46"/>
<text text-anchor="middle" x="4269.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.Validator -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.validator.Validator</title>
<polygon fill="none" stroke="black" points="4335.5,-23 4335.5,-93 4445.5,-93 4445.5,-23 4335.5,-23"/>
<text text-anchor="middle" x="4390.5" y="-77.8" font-family="Times,serif" font-size="14.00">Validator</text>
<polyline fill="none" stroke="black" points="4335.5,-70 4445.5,-70"/>
<polyline fill="none" stroke="black" points="4335.5,-46 4445.5,-46"/>
<text text-anchor="start" x="4343.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge4" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M492.56,-223.8C478.62,-236.75 462.18,-252.01 445.91,-267.12"/>
<polygon fill="black" stroke="black" points="445.7,-267.31 444.03,-274.33 436.91,-275.48 438.58,-268.46 445.7,-267.31"/>
<text text-anchor="middle" x="498" y="-245.8" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="4463.5,-1 4463.5,-115 4689.5,-115 4689.5,-1 4463.5,-1"/>
<text text-anchor="middle" x="4576.5" y="-99.8" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="4463.5,-92 4689.5,-92"/>
<text text-anchor="start" x="4471.5" y="-76.8" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="4463.5,-69 4689.5,-69"/>
<text text-anchor="start" x="4471.5" y="-53.8" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="4471.5" y="-38.8" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="4471.5" y="-23.8" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="4471.5" y="-8.8" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="4708,-23 4708,-93 4851,-93 4851,-23 4708,-23"/>
<text text-anchor="middle" x="4779.5" y="-77.8" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="4708,-70 4851,-70"/>
<polyline fill="none" stroke="black" points="4708,-46 4851,-46"/>
<text text-anchor="start" x="4716" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node23" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="4869,-16 4869,-100 5230,-100 5230,-16 4869,-16"/>
<text text-anchor="middle" x="5049.5" y="-84.8" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="4869,-77 5230,-77"/>
<text text-anchor="start" x="4877" y="-61.8" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="4869,-54 5230,-54"/>
<text text-anchor="start" x="4877" y="-38.8" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="4877" y="-23.8" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node24" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="5248.5,-1 5248.5,-115 5602.5,-115 5602.5,-1 5248.5,-1"/>
<text text-anchor="middle" x="5425.5" y="-99.8" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="5248.5,-92 5602.5,-92"/>
<text text-anchor="start" x="5256.5" y="-76.8" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5256.5" y="-61.8" font-family="Times,serif" font-size="14.00">converter_lookup : dict, defaultdict</text>
<text text-anchor="start" x="5256.5" y="-46.8" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="5248.5,-39 5602.5,-39"/>
<text text-anchor="start" x="5256.5" y="-23.8" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5256.5" y="-8.8" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
