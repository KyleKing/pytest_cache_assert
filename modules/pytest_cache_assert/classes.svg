<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="5610pt" height="305pt"
 viewBox="0.00 0.00 5609.50 305.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 301)">
<title>classes</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-301 5605.5,-301 5605.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="320.5,-167.5 320.5,-296.5 488.5,-296.5 488.5,-167.5 320.5,-167.5"/>
<text text-anchor="middle" x="404.5" y="-281.3" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="320.5,-273.5 488.5,-273.5"/>
<text text-anchor="start" x="328.5" y="-258.3" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="328.5" y="-243.3" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="328.5" y="-228.3" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="328.5" y="-213.3" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="328.5" y="-198.3" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="320.5,-190.5 488.5,-190.5"/>
<text text-anchor="middle" x="404.5" y="-175.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="637.5,-8.5 637.5,-107.5 1173.5,-107.5 1173.5,-8.5 637.5,-8.5"/>
<text text-anchor="middle" x="905.5" y="-92.3" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="637.5,-84.5 1173.5,-84.5"/>
<text text-anchor="start" x="645.5" y="-69.3" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="645.5" y="-54.3" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="637.5,-46.5 1173.5,-46.5"/>
<text text-anchor="start" x="645.5" y="-31.3" font-family="Times,serif" font-size="14.00">build_re(pattern: List[Union[str, Wild]], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="645.5" y="-16.3" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1191.5,-23.5 1191.5,-92.5 1357.5,-92.5 1357.5,-23.5 1191.5,-23.5"/>
<text text-anchor="middle" x="1274.5" y="-77.3" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1191.5,-69.5 1357.5,-69.5"/>
<text text-anchor="start" x="1199.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1191.5,-46.5 1357.5,-46.5"/>
<text text-anchor="middle" x="1274.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-115.5 491,-115.5 491,-0.5 0,-0.5"/>
<text text-anchor="middle" x="245.5" y="-100.3" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="0,-92.5 491,-92.5"/>
<polyline fill="none" stroke="black" points="0,-68.5 491,-68.5"/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M298,-115.8C310.66,-129.49 324.36,-144.31 337.58,-158.61"/>
<polygon fill="black" stroke="black" points="337.59,-158.62 344.6,-160.31 345.73,-167.43 338.72,-165.74 337.59,-158.62"/>
<text text-anchor="middle" x="357.5" y="-137.8" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1375.5,-23.5 1375.5,-92.5 1457.5,-92.5 1457.5,-23.5 1375.5,-23.5"/>
<text text-anchor="middle" x="1416.5" y="-77.3" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1375.5,-69.5 1457.5,-69.5"/>
<text text-anchor="start" x="1383.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1375.5,-46.5 1457.5,-46.5"/>
<text text-anchor="middle" x="1416.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node6" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="1476,-16 1476,-100 1659,-100 1659,-16 1476,-16"/>
<text text-anchor="middle" x="1567.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1476,-77 1659,-77"/>
<text text-anchor="start" x="1484" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="1484" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="1476,-39 1659,-39"/>
<text text-anchor="middle" x="1567.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="1677,-23.5 1677,-92.5 1860,-92.5 1860,-23.5 1677,-23.5"/>
<text text-anchor="middle" x="1768.5" y="-77.3" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1677,-69.5 1860,-69.5"/>
<text text-anchor="start" x="1685" y="-54.3" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<polyline fill="none" stroke="black" points="1677,-46.5 1860,-46.5"/>
<text text-anchor="middle" x="1768.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="1878.5,-16 1878.5,-100 1988.5,-100 1988.5,-16 1878.5,-16"/>
<text text-anchor="middle" x="1933.5" y="-84.8" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="1878.5,-77 1988.5,-77"/>
<text text-anchor="start" x="1886.5" y="-61.8" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="1886.5" y="-46.8" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="1878.5,-39 1988.5,-39"/>
<text text-anchor="middle" x="1933.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="2006.5,-23 2006.5,-93 2118.5,-93 2118.5,-23 2006.5,-23"/>
<text text-anchor="middle" x="2062.5" y="-77.8" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="2006.5,-70 2118.5,-70"/>
<polyline fill="none" stroke="black" points="2006.5,-46 2118.5,-46"/>
<text text-anchor="start" x="2014.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2137,-16 2137,-100 2432,-100 2432,-16 2137,-16"/>
<text text-anchor="middle" x="2284.5" y="-84.8" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2137,-77 2432,-77"/>
<text text-anchor="start" x="2145" y="-61.8" font-family="Times,serif" font-size="14.00">results : dict, Dict</text>
<polyline fill="none" stroke="black" points="2137,-54 2432,-54"/>
<text text-anchor="start" x="2145" y="-38.8" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2145" y="-23.8" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="2450,-0.5 2450,-115.5 2941,-115.5 2941,-0.5 2450,-0.5"/>
<text text-anchor="middle" x="2695.5" y="-100.3" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="2450,-92.5 2941,-92.5"/>
<polyline fill="none" stroke="black" points="2450,-68.5 2941,-68.5"/>
<text text-anchor="start" x="2458" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="2458" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="2458" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="2458" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="2959.5,-23 2959.5,-93 3111.5,-93 3111.5,-23 2959.5,-23"/>
<text text-anchor="middle" x="3035.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="2959.5,-70 3111.5,-70"/>
<polyline fill="none" stroke="black" points="2959.5,-46 3111.5,-46"/>
<text text-anchor="middle" x="3035.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3130,-23 3130,-93 3225,-93 3225,-23 3130,-23"/>
<text text-anchor="middle" x="3177.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3130,-70 3225,-70"/>
<polyline fill="none" stroke="black" points="3130,-46 3225,-46"/>
<text text-anchor="middle" x="3177.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3243,-23 3243,-93 3314,-93 3314,-23 3243,-23"/>
<text text-anchor="middle" x="3278.5" y="-77.8" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3243,-70 3314,-70"/>
<polyline fill="none" stroke="black" points="3243,-46 3314,-46"/>
<text text-anchor="middle" x="3278.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="3332,-23.5 3332,-92.5 3907,-92.5 3907,-23.5 3332,-23.5"/>
<text text-anchor="middle" x="3619.5" y="-77.3" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="3332,-69.5 3907,-69.5"/>
<text text-anchor="start" x="3340" y="-54.3" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="3332,-46.5 3907,-46.5"/>
<text text-anchor="start" x="3340" y="-31.3" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node16" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="3925,-8.5 3925,-107.5 4330,-107.5 4330,-8.5 3925,-8.5"/>
<text text-anchor="middle" x="4127.5" y="-92.3" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="3925,-84.5 4330,-84.5"/>
<text text-anchor="start" x="3933" y="-69.3" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="3933" y="-54.3" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="3933" y="-39.3" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="3925,-31.5 4330,-31.5"/>
<text text-anchor="start" x="3933" y="-16.3" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.Unconvertable -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.serializer.Unconvertable</title>
<polygon fill="none" stroke="black" points="4348.5,-23 4348.5,-93 4444.5,-93 4444.5,-23 4348.5,-23"/>
<text text-anchor="middle" x="4396.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">Unconvertable</text>
<polyline fill="none" stroke="black" points="4348.5,-70 4444.5,-70"/>
<polyline fill="none" stroke="black" points="4348.5,-46 4444.5,-46"/>
<text text-anchor="middle" x="4396.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="509.5,-23 509.5,-93 619.5,-93 619.5,-23 509.5,-23"/>
<text text-anchor="middle" x="564.5" y="-77.8" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="509.5,-70 619.5,-70"/>
<polyline fill="none" stroke="black" points="509.5,-46 619.5,-46"/>
<text text-anchor="start" x="517.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M532.51,-93.39C515.12,-112.09 492.92,-135.94 471.92,-158.52"/>
<polygon fill="black" stroke="black" points="471.8,-158.65 470.65,-165.77 463.63,-167.43 464.79,-160.32 471.8,-158.65"/>
<text text-anchor="middle" x="518" y="-137.8" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="4462.5,-1 4462.5,-115 4688.5,-115 4688.5,-1 4462.5,-1"/>
<text text-anchor="middle" x="4575.5" y="-99.8" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="4462.5,-92 4688.5,-92"/>
<text text-anchor="start" x="4470.5" y="-76.8" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="4462.5,-69 4688.5,-69"/>
<text text-anchor="start" x="4470.5" y="-53.8" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="4470.5" y="-38.8" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="4470.5" y="-23.8" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="4470.5" y="-8.8" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="4707,-23 4707,-93 4850,-93 4850,-23 4707,-23"/>
<text text-anchor="middle" x="4778.5" y="-77.8" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="4707,-70 4850,-70"/>
<polyline fill="none" stroke="black" points="4707,-46 4850,-46"/>
<text text-anchor="start" x="4715" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="4868,-16 4868,-100 5229,-100 5229,-16 4868,-16"/>
<text text-anchor="middle" x="5048.5" y="-84.8" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="4868,-77 5229,-77"/>
<text text-anchor="start" x="4876" y="-61.8" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="4868,-54 5229,-54"/>
<text text-anchor="start" x="4876" y="-38.8" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="4876" y="-23.8" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="5247.5,-1 5247.5,-115 5601.5,-115 5601.5,-1 5247.5,-1"/>
<text text-anchor="middle" x="5424.5" y="-99.8" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="5247.5,-92 5601.5,-92"/>
<text text-anchor="start" x="5255.5" y="-76.8" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5255.5" y="-61.8" font-family="Times,serif" font-size="14.00">converter_lookup : defaultdict, dict</text>
<text text-anchor="start" x="5255.5" y="-46.8" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="5247.5,-39 5601.5,-39"/>
<text text-anchor="start" x="5255.5" y="-23.8" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5255.5" y="-8.8" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
