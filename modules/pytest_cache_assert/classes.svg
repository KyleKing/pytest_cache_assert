<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="6211pt" height="413pt"
 viewBox="0.00 0.00 6210.50 413.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 409)">
<title>classes</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-409 6206.5,-409 6206.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="361.5,-275.5 361.5,-404.5 577.5,-404.5 577.5,-275.5 361.5,-275.5"/>
<text text-anchor="middle" x="469.5" y="-389.3" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="361.5,-381.5 577.5,-381.5 "/>
<text text-anchor="start" x="369.5" y="-366.3" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="369.5" y="-351.3" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="369.5" y="-336.3" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="369.5" y="-321.3" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="369.5" y="-306.3" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="361.5,-298.5 577.5,-298.5 "/>
<text text-anchor="middle" x="469.5" y="-283.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="806,-8.5 806,-107.5 1475,-107.5 1475,-8.5 806,-8.5"/>
<text text-anchor="middle" x="1140.5" y="-92.3" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="806,-84.5 1475,-84.5 "/>
<text text-anchor="start" x="814" y="-69.3" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="814" y="-54.3" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="806,-46.5 1475,-46.5 "/>
<text text-anchor="start" x="814" y="-31.3" font-family="Times,serif" font-size="14.00">build_re(pattern: List[Union[str, Wild]], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="814" y="-16.3" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1493.5,-23.5 1493.5,-92.5 1703.5,-92.5 1703.5,-23.5 1493.5,-23.5"/>
<text text-anchor="middle" x="1598.5" y="-77.3" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1493.5,-69.5 1703.5,-69.5 "/>
<text text-anchor="start" x="1501.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1493.5,-46.5 1703.5,-46.5 "/>
<text text-anchor="middle" x="1598.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStore -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStore</title>
<polygon fill="none" stroke="black" points="1722,-0.5 1722,-115.5 2351,-115.5 2351,-0.5 1722,-0.5"/>
<text text-anchor="middle" x="2036.5" y="-100.3" font-family="Times,serif" font-size="14.00">CacheStore</text>
<polyline fill="none" stroke="black" points="1722,-92.5 2351,-92.5 "/>
<polyline fill="none" stroke="black" points="1722,-68.5 2351,-68.5 "/>
<text text-anchor="start" x="1730" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="1730" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="1730" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="1730" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="264.5,-153.5 264.5,-223.5 460.5,-223.5 460.5,-153.5 264.5,-153.5"/>
<text text-anchor="middle" x="362.5" y="-208.3" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="264.5,-200.5 460.5,-200.5 "/>
<polyline fill="none" stroke="black" points="264.5,-176.5 460.5,-176.5 "/>
<text text-anchor="start" x="272.5" y="-161.3" font-family="Times,serif" font-size="14.00">validate(value: Self): Self</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge3" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M387.05,-223.8C395.97,-236.27 406.43,-250.88 416.85,-265.44"/>
<polygon fill="black" stroke="black" points="417.05,-265.72 423.8,-268.27 424.04,-275.48 417.29,-272.93 417.05,-265.72"/>
<text text-anchor="middle" x="453" y="-245.8" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node6" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="2369.5,-23.5 2369.5,-92.5 2471.5,-92.5 2471.5,-23.5 2369.5,-23.5"/>
<text text-anchor="middle" x="2420.5" y="-77.3" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="2369.5,-69.5 2471.5,-69.5 "/>
<text text-anchor="start" x="2377.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="2369.5,-46.5 2471.5,-46.5 "/>
<text text-anchor="middle" x="2420.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="2489.5,-16 2489.5,-100 2721.5,-100 2721.5,-16 2489.5,-16"/>
<text text-anchor="middle" x="2605.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="2489.5,-77 2721.5,-77 "/>
<text text-anchor="start" x="2497.5" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="2497.5" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="2489.5,-39 2721.5,-39 "/>
<text text-anchor="middle" x="2605.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="2739.5,-16 2739.5,-100 2971.5,-100 2971.5,-16 2739.5,-16"/>
<text text-anchor="middle" x="2855.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="2739.5,-77 2971.5,-77 "/>
<text text-anchor="start" x="2747.5" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="2747.5" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="2739.5,-39 2971.5,-39 "/>
<text text-anchor="middle" x="2855.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="2989.5,-16 2989.5,-100 3123.5,-100 3123.5,-16 2989.5,-16"/>
<text text-anchor="middle" x="3056.5" y="-84.8" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="2989.5,-77 3123.5,-77 "/>
<text text-anchor="start" x="2997.5" y="-61.8" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="2997.5" y="-46.8" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="2989.5,-39 3123.5,-39 "/>
<text text-anchor="middle" x="3056.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="647.5,-23 647.5,-93 787.5,-93 787.5,-23 647.5,-23"/>
<text text-anchor="middle" x="717.5" y="-77.8" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="647.5,-70 787.5,-70 "/>
<polyline fill="none" stroke="black" points="647.5,-46 787.5,-46 "/>
<text text-anchor="start" x="655.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="572.5,-153.5 572.5,-223.5 768.5,-223.5 768.5,-153.5 572.5,-153.5"/>
<text text-anchor="middle" x="670.5" y="-208.3" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="572.5,-200.5 768.5,-200.5 "/>
<polyline fill="none" stroke="black" points="572.5,-176.5 768.5,-176.5 "/>
<text text-anchor="start" x="580.5" y="-161.3" font-family="Times,serif" font-size="14.00">validate(value: Self): Self</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator&#45;&gt;pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator&#45;&gt;pytest_cache_assert._check_assert.validator.ValidatorType</title>
<path fill="none" stroke="black" d="M705.03,-93.1C699.34,-108.64 692.55,-127.22 686.49,-143.77"/>
<polygon fill="none" stroke="black" points="683.18,-142.65 683.03,-153.24 689.75,-145.05 683.18,-142.65"/>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="3141.5,-16 3141.5,-100 3523.5,-100 3523.5,-16 3141.5,-16"/>
<text text-anchor="middle" x="3332.5" y="-84.8" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="3141.5,-77 3523.5,-77 "/>
<text text-anchor="start" x="3149.5" y="-61.8" font-family="Times,serif" font-size="14.00">results : dict, Dict</text>
<polyline fill="none" stroke="black" points="3141.5,-54 3523.5,-54 "/>
<text text-anchor="start" x="3149.5" y="-38.8" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="3149.5" y="-23.8" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-115.5 629,-115.5 629,-0.5 0,-0.5"/>
<text text-anchor="middle" x="314.5" y="-100.3" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="0,-92.5 629,-92.5 "/>
<polyline fill="none" stroke="black" points="0,-68.5 629,-68.5 "/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore&#45;&gt;pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore&#45;&gt;pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<path fill="none" stroke="black" d="M335.69,-115.74C339.2,-125.12 342.78,-134.71 346.14,-143.71"/>
<polygon fill="none" stroke="black" points="342.91,-145.06 349.69,-153.21 349.47,-142.61 342.91,-145.06"/>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3542,-23 3542,-93 3661,-93 3661,-23 3542,-23"/>
<text text-anchor="middle" x="3601.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3542,-70 3661,-70 "/>
<polyline fill="none" stroke="black" points="3542,-46 3661,-46 "/>
<text text-anchor="middle" x="3601.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3679,-23 3679,-93 3766,-93 3766,-23 3679,-23"/>
<text text-anchor="middle" x="3722.5" y="-77.8" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3679,-70 3766,-70 "/>
<polyline fill="none" stroke="black" points="3679,-46 3766,-46 "/>
<text text-anchor="middle" x="3722.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="3784,-23.5 3784,-92.5 4519,-92.5 4519,-23.5 3784,-23.5"/>
<text text-anchor="middle" x="4151.5" y="-77.3" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="3784,-69.5 4519,-69.5 "/>
<text text-anchor="start" x="3792" y="-54.3" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="3784,-46.5 4519,-46.5 "/>
<text text-anchor="start" x="3792" y="-31.3" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node16" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="4537,-8.5 4537,-107.5 5064,-107.5 5064,-8.5 4537,-8.5"/>
<text text-anchor="middle" x="4800.5" y="-92.3" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="4537,-84.5 5064,-84.5 "/>
<text text-anchor="start" x="4545" y="-69.3" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="4545" y="-54.3" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="4545" y="-39.3" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="4537,-31.5 5064,-31.5 "/>
<text text-anchor="start" x="4545" y="-16.3" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.Unconvertable -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.serializer.Unconvertable</title>
<polygon fill="none" stroke="black" points="5082.5,-23 5082.5,-93 5204.5,-93 5204.5,-23 5082.5,-23"/>
<text text-anchor="middle" x="5143.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">Unconvertable</text>
<polyline fill="none" stroke="black" points="5082.5,-70 5204.5,-70 "/>
<polyline fill="none" stroke="black" points="5082.5,-46 5204.5,-46 "/>
<text text-anchor="middle" x="5143.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.Validator -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.validator.Validator</title>
<polygon fill="none" stroke="black" points="5222.5,-23 5222.5,-93 5362.5,-93 5362.5,-23 5222.5,-23"/>
<text text-anchor="middle" x="5292.5" y="-77.8" font-family="Times,serif" font-size="14.00">Validator</text>
<polyline fill="none" stroke="black" points="5222.5,-70 5362.5,-70 "/>
<polyline fill="none" stroke="black" points="5222.5,-46 5362.5,-46 "/>
<text text-anchor="start" x="5230.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge4" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M624.64,-223.61C606.83,-236.85 585.74,-252.54 564.94,-268.01"/>
<polygon fill="black" stroke="black" points="564.72,-268.18 562.3,-274.97 555.09,-275.34 557.52,-268.55 564.72,-268.18"/>
<text text-anchor="middle" x="632.5" y="-245.8" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="5380.5,-16 5380.5,-100 5544.5,-100 5544.5,-16 5380.5,-16"/>
<text text-anchor="middle" x="5462.5" y="-84.8" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="5380.5,-77 5544.5,-77 "/>
<text text-anchor="start" x="5388.5" y="-61.8" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="5380.5,-54 5544.5,-54 "/>
<text text-anchor="start" x="5388.5" y="-38.8" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="5388.5" y="-23.8" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="5562.5,-23 5562.5,-93 5744.5,-93 5744.5,-23 5562.5,-23"/>
<text text-anchor="middle" x="5653.5" y="-77.8" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="5562.5,-70 5744.5,-70 "/>
<polyline fill="none" stroke="black" points="5562.5,-46 5744.5,-46 "/>
<text text-anchor="start" x="5570.5" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="5762.5,-1 5762.5,-115 6202.5,-115 6202.5,-1 5762.5,-1"/>
<text text-anchor="middle" x="5982.5" y="-99.8" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="5762.5,-92 6202.5,-92 "/>
<text text-anchor="start" x="5770.5" y="-76.8" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5770.5" y="-61.8" font-family="Times,serif" font-size="14.00">converter_lookup : dict, defaultdict</text>
<text text-anchor="start" x="5770.5" y="-46.8" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="5762.5,-39 6202.5,-39 "/>
<text text-anchor="start" x="5770.5" y="-23.8" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="5770.5" y="-8.8" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
