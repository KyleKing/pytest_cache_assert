<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="6690pt" height="321pt"
 viewBox="0.00 0.00 6689.50 320.80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 316.8)">
<title>classes</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-316.8 6685.5,-316.8 6685.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="407.5,-168.3 407.5,-312.3 623.5,-312.3 623.5,-168.3 407.5,-168.3"/>
<text text-anchor="start" x="469.5" y="-297.1" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="407.5,-289.3 623.5,-289.3 "/>
<text text-anchor="start" x="415.5" y="-274.1" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="415.5" y="-259.1" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="415.5" y="-244.1" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="415.5" y="-229.1" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="415.5" y="-214.1" font-family="Times,serif" font-size="14.00">model_config : ConfigDict</text>
<text text-anchor="start" x="415.5" y="-199.1" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="407.5,-191.3 623.5,-191.3 "/>
<text text-anchor="start" x="513" y="-176.1" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="805.5,-8.9 805.5,-107.9 1381.5,-107.9 1381.5,-8.9 805.5,-8.9"/>
<text text-anchor="start" x="1054" y="-92.7" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="805.5,-84.9 1381.5,-84.9 "/>
<text text-anchor="start" x="957" y="-69.7" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="957" y="-54.7" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="805.5,-46.9 1381.5,-46.9 "/>
<text text-anchor="start" x="813.5" y="-31.7" font-family="Times,serif" font-size="14.00">build_re(pattern: List[str], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="813.5" y="-16.7" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1399.5,-23.9 1399.5,-92.9 1609.5,-92.9 1609.5,-23.9 1399.5,-23.9"/>
<text text-anchor="start" x="1407.5" y="-77.7" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1399.5,-69.9 1609.5,-69.9 "/>
<text text-anchor="start" x="1484.5" y="-54.7" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1399.5,-46.9 1609.5,-46.9 "/>
<text text-anchor="start" x="1502" y="-31.7" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-116.3 629,-116.3 629,-0.5 0,-0.5"/>
<text text-anchor="start" x="255.5" y="-101.1" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="0,-93.3 629,-93.3 "/>
<polyline fill="none" stroke="black" points="0,-68.5 629,-68.5 "/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M378.1,-116.32C393.62,-130.22 410.52,-145.34 426.97,-160.07"/>
<polygon fill="black" stroke="black" points="427.12,-160.2 434.26,-161.22 436.06,-168.2 428.92,-167.18 427.12,-160.2"/>
<text text-anchor="middle" x="458" y="-138.6" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1627.5,-23.9 1627.5,-92.9 1729.5,-92.9 1729.5,-23.9 1627.5,-23.9"/>
<text text-anchor="start" x="1635.5" y="-77.7" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1627.5,-69.9 1729.5,-69.9 "/>
<text text-anchor="start" x="1658.5" y="-54.7" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1627.5,-46.9 1729.5,-46.9 "/>
<text text-anchor="start" x="1676" y="-31.7" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node6" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="1747.5,-16.4 1747.5,-100.4 1881.5,-100.4 1881.5,-16.4 1747.5,-16.4"/>
<text text-anchor="start" x="1778" y="-85.2" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="1747.5,-77.4 1881.5,-77.4 "/>
<text text-anchor="start" x="1755.5" y="-62.2" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="1755.5" y="-47.2" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="1747.5,-39.4 1881.5,-39.4 "/>
<text text-anchor="start" x="1812" y="-24.2" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node7" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="1899.5,-23 1899.5,-93.8 2039.5,-93.8 2039.5,-23 1899.5,-23"/>
<text text-anchor="start" x="1909.5" y="-78.6" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="1899.5,-70.8 2039.5,-70.8 "/>
<polyline fill="none" stroke="black" points="1899.5,-46 2039.5,-46 "/>
<text text-anchor="start" x="1907.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2057.5,-16.4 2057.5,-100.4 2439.5,-100.4 2439.5,-16.4 2057.5,-16.4"/>
<text text-anchor="start" x="2209" y="-85.2" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2057.5,-77.4 2439.5,-77.4 "/>
<text text-anchor="start" x="2184" y="-62.2" font-family="Times,serif" font-size="14.00">results : Dict, dict</text>
<polyline fill="none" stroke="black" points="2057.5,-54.4 2439.5,-54.4 "/>
<text text-anchor="start" x="2065.5" y="-39.2" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2065.5" y="-24.2" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="2458,-0.5 2458,-116.3 3087,-116.3 3087,-0.5 2458,-0.5"/>
<text text-anchor="start" x="2693" y="-101.1" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="2458,-93.3 3087,-93.3 "/>
<polyline fill="none" stroke="black" points="2458,-68.5 3087,-68.5 "/>
<text text-anchor="start" x="2466" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="2466" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="2466" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="2466" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="3105,-23 3105,-93.8 3296,-93.8 3296,-23 3105,-23"/>
<text text-anchor="start" x="3113" y="-78.6" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="3105,-70.8 3296,-70.8 "/>
<polyline fill="none" stroke="black" points="3105,-46 3296,-46 "/>
<text text-anchor="start" x="3198" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3314,-23 3314,-93.8 3433,-93.8 3433,-23 3314,-23"/>
<text text-anchor="start" x="3322" y="-78.6" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3314,-70.8 3433,-70.8 "/>
<polyline fill="none" stroke="black" points="3314,-46 3433,-46 "/>
<text text-anchor="start" x="3371" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3451,-23 3451,-93.8 3538,-93.8 3538,-23 3451,-23"/>
<text text-anchor="start" x="3459" y="-78.6" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3451,-70.8 3538,-70.8 "/>
<polyline fill="none" stroke="black" points="3451,-46 3538,-46 "/>
<text text-anchor="start" x="3492" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="3556,-23.9 3556,-92.9 4291,-92.9 4291,-23.9 3556,-23.9"/>
<text text-anchor="start" x="3854" y="-77.7" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="3556,-69.9 4291,-69.9 "/>
<text text-anchor="start" x="3845" y="-54.7" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="3556,-46.9 4291,-46.9 "/>
<text text-anchor="start" x="3564" y="-31.7" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node14" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="4309,-1.4 4309,-115.4 4836,-115.4 4836,-1.4 4309,-1.4"/>
<text text-anchor="start" x="4523" y="-100.2" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="4309,-92.4 4836,-92.4 "/>
<text text-anchor="start" x="4457" y="-77.2" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="4457" y="-62.2" font-family="Times,serif" font-size="14.00">model_config : ConfigDict</text>
<text text-anchor="start" x="4457" y="-47.2" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="4457" y="-32.2" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="4309,-24.4 4836,-24.4 "/>
<text text-anchor="start" x="4317" y="-9.2" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.UnconvertableError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.serializer.UnconvertableError</title>
<polygon fill="none" stroke="black" points="4854,-23 4854,-93.8 5015,-93.8 5015,-23 4854,-23"/>
<text text-anchor="start" x="4862" y="-78.6" font-family="Times,serif" font-size="14.00" fill="red">UnconvertableError</text>
<polyline fill="none" stroke="black" points="4854,-70.8 5015,-70.8 "/>
<polyline fill="none" stroke="black" points="4854,-46 5015,-46 "/>
<text text-anchor="start" x="4932" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node16" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="647.5,-23 647.5,-93.8 787.5,-93.8 787.5,-23 647.5,-23"/>
<text text-anchor="start" x="667.5" y="-78.6" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="647.5,-70.8 787.5,-70.8 "/>
<polyline fill="none" stroke="black" points="647.5,-46 787.5,-46 "/>
<text text-anchor="start" x="655.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M678.55,-94.09C657.43,-112.9 630.39,-136.98 604.43,-160.1"/>
<polygon fill="black" stroke="black" points="604.26,-160.25 602.44,-167.23 595.3,-168.23 597.12,-161.25 604.26,-160.25"/>
<text text-anchor="middle" x="660.5" y="-138.6" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="5033,-0.5 5033,-116.3 5328,-116.3 5328,-0.5 5033,-0.5"/>
<text text-anchor="start" x="5164" y="-101.1" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="5033,-93.3 5328,-93.3 "/>
<polyline fill="none" stroke="black" points="5033,-68.5 5328,-68.5 "/>
<text text-anchor="start" x="5041" y="-53.3" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="5041" y="-38.3" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="5041" y="-23.3" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="5041" y="-8.3" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._BeartypeModes -->
<g id="node18" class="node">
<title>pytest_cache_assert._BeartypeModes</title>
<polygon fill="none" stroke="black" points="5346,-23.9 5346,-92.9 5541,-92.9 5541,-23.9 5346,-23.9"/>
<text text-anchor="start" x="5383.5" y="-77.7" font-family="Times,serif" font-size="14.00">_BeartypeModes</text>
<polyline fill="none" stroke="black" points="5346,-69.9 5541,-69.9 "/>
<text text-anchor="start" x="5423.5" y="-54.7" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="5346,-46.9 5541,-46.9 "/>
<text text-anchor="start" x="5354" y="-31.7" font-family="Times,serif" font-size="14.00">from_environment(): Self</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="5559.5,-23 5559.5,-93.8 5741.5,-93.8 5741.5,-23 5559.5,-23"/>
<text text-anchor="start" x="5567.5" y="-78.6" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="5559.5,-70.8 5741.5,-70.8 "/>
<polyline fill="none" stroke="black" points="5559.5,-46 5741.5,-46 "/>
<text text-anchor="start" x="5573" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="5760,-16.4 5760,-100.4 6223,-100.4 6223,-16.4 5760,-16.4"/>
<text text-anchor="start" x="5929.5" y="-85.2" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="5760,-77.4 6223,-77.4 "/>
<text text-anchor="start" x="5921.5" y="-62.2" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="5760,-54.4 6223,-54.4 "/>
<text text-anchor="start" x="5768" y="-39.2" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="5768" y="-24.2" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="6241.5,-1.4 6241.5,-115.4 6681.5,-115.4 6681.5,-1.4 6241.5,-1.4"/>
<text text-anchor="start" x="6418" y="-100.2" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="6241.5,-92.4 6681.5,-92.4 "/>
<text text-anchor="start" x="6282.5" y="-77.2" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="6282.5" y="-62.2" font-family="Times,serif" font-size="14.00">converter_lookup : dict, defaultdict</text>
<text text-anchor="start" x="6282.5" y="-47.2" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="6241.5,-39.4 6681.5,-39.4 "/>
<text text-anchor="start" x="6249.5" y="-24.2" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="6249.5" y="-9.2" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
