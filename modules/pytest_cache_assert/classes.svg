<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: classes Pages: 1 -->
<svg width="6939pt" height="305pt"
 viewBox="0.00 0.00 6938.50 305.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 301)">
<title>classes</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-301 6934.5,-301 6934.5,4 -4,4"/>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="node1" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<polygon fill="none" stroke="black" points="407.5,-167.5 407.5,-296.5 623.5,-296.5 623.5,-167.5 407.5,-167.5"/>
<text text-anchor="middle" x="515.5" y="-281.3" font-family="Times,serif" font-size="14.00">AssertConfig</text>
<polyline fill="none" stroke="black" points="407.5,-273.5 623.5,-273.5 "/>
<text text-anchor="start" x="415.5" y="-258.3" font-family="Times,serif" font-size="14.00">always_write : bool</text>
<text text-anchor="start" x="415.5" y="-243.3" font-family="Times,serif" font-size="14.00">cache_dir_rel_path : str</text>
<text text-anchor="start" x="415.5" y="-228.3" font-family="Times,serif" font-size="14.00">cache_store</text>
<text text-anchor="start" x="415.5" y="-213.3" font-family="Times,serif" font-size="14.00">converters : List[Converter]</text>
<text text-anchor="start" x="415.5" y="-198.3" font-family="Times,serif" font-size="14.00">validator</text>
<polyline fill="none" stroke="black" points="407.5,-190.5 623.5,-190.5 "/>
<text text-anchor="middle" x="515.5" y="-175.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.AssertRule -->
<g id="node2" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.AssertRule</title>
<polygon fill="none" stroke="black" points="805.5,-8.5 805.5,-107.5 1381.5,-107.5 1381.5,-8.5 805.5,-8.5"/>
<text text-anchor="middle" x="1093.5" y="-92.3" font-family="Times,serif" font-size="14.00">AssertRule</text>
<polyline fill="none" stroke="black" points="805.5,-84.5 1381.5,-84.5 "/>
<text text-anchor="start" x="813.5" y="-69.3" font-family="Times,serif" font-size="14.00">func : Callable[[T_DIFF, T_DIFF], bool]</text>
<text text-anchor="start" x="813.5" y="-54.3" font-family="Times,serif" font-size="14.00">pattern : Union[str, Pattern]</text>
<polyline fill="none" stroke="black" points="805.5,-46.5 1381.5,-46.5 "/>
<text text-anchor="start" x="813.5" y="-31.3" font-family="Times,serif" font-size="14.00">build_re(pattern: List[str], func: Callable[[T_DIFF, T_DIFF], bool]): &#39;AssertRule&#39;</text>
<text text-anchor="start" x="813.5" y="-16.3" font-family="Times,serif" font-size="14.00">is_regex(): bool</text>
</g>
<!-- pytest_cache_assert._check_assert.config.CacheAssertContainerKeys -->
<g id="node3" class="node">
<title>pytest_cache_assert._check_assert.config.CacheAssertContainerKeys</title>
<polygon fill="none" stroke="black" points="1399.5,-23.5 1399.5,-92.5 1609.5,-92.5 1609.5,-23.5 1399.5,-23.5"/>
<text text-anchor="middle" x="1504.5" y="-77.3" font-family="Times,serif" font-size="14.00">CacheAssertContainerKeys</text>
<polyline fill="none" stroke="black" points="1399.5,-69.5 1609.5,-69.5 "/>
<text text-anchor="start" x="1407.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1399.5,-46.5 1609.5,-46.5 "/>
<text text-anchor="middle" x="1504.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType -->
<g id="node4" class="node">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType</title>
<polygon fill="none" stroke="black" points="0,-0.5 0,-115.5 629,-115.5 629,-0.5 0,-0.5"/>
<text text-anchor="middle" x="314.5" y="-100.3" font-family="Times,serif" font-size="14.00">CacheStoreType</text>
<polyline fill="none" stroke="black" points="0,-92.5 629,-92.5 "/>
<polyline fill="none" stroke="black" points="0,-68.5 629,-68.5 "/>
<text text-anchor="start" x="8" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="8" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="8" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="8" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge1" class="edge">
<title>pytest_cache_assert._check_assert.cache_store.CacheStoreType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M380.59,-115.56C396.91,-129.52 414.6,-144.66 431.64,-159.24"/>
<polygon fill="black" stroke="black" points="431.9,-159.46 439.06,-160.33 441.02,-167.27 433.86,-166.4 431.9,-159.46"/>
<text text-anchor="middle" x="458" y="-137.8" font-family="Times,serif" font-size="14.00" fill="green">cache_store</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Comparator -->
<g id="node5" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Comparator</title>
<polygon fill="none" stroke="black" points="1627.5,-23.5 1627.5,-92.5 1729.5,-92.5 1729.5,-23.5 1627.5,-23.5"/>
<text text-anchor="middle" x="1678.5" y="-77.3" font-family="Times,serif" font-size="14.00">Comparator</text>
<polyline fill="none" stroke="black" points="1627.5,-69.5 1729.5,-69.5 "/>
<text text-anchor="start" x="1635.5" y="-54.3" font-family="Times,serif" font-size="14.00">name</text>
<polyline fill="none" stroke="black" points="1627.5,-46.5 1729.5,-46.5 "/>
<text text-anchor="middle" x="1678.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata.Config -->
<g id="node6" class="node">
<title>pytest_cache_assert.plugin.TestMetadata.Config</title>
<polygon fill="none" stroke="black" points="1747.5,-16 1747.5,-100 1979.5,-100 1979.5,-16 1747.5,-16"/>
<text text-anchor="middle" x="1863.5" y="-84.8" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1747.5,-77 1979.5,-77 "/>
<text text-anchor="start" x="1755.5" y="-61.8" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<text text-anchor="start" x="1755.5" y="-46.8" font-family="Times,serif" font-size="14.00">frozen : bool</text>
<polyline fill="none" stroke="black" points="1747.5,-39 1979.5,-39 "/>
<text text-anchor="middle" x="1863.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.assert_config.AssertConfig.Config -->
<g id="node7" class="node">
<title>pytest_cache_assert._check_assert.assert_config.AssertConfig.Config</title>
<polygon fill="none" stroke="black" points="1997.5,-23.5 1997.5,-92.5 2229.5,-92.5 2229.5,-23.5 1997.5,-23.5"/>
<text text-anchor="middle" x="2113.5" y="-77.3" font-family="Times,serif" font-size="14.00">Config</text>
<polyline fill="none" stroke="black" points="1997.5,-69.5 2229.5,-69.5 "/>
<text text-anchor="start" x="2005.5" y="-54.3" font-family="Times,serif" font-size="14.00">arbitrary_types_allowed : bool</text>
<polyline fill="none" stroke="black" points="1997.5,-46.5 2229.5,-46.5 "/>
<text text-anchor="middle" x="2113.5" y="-31.3" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.converter.Converter -->
<g id="node8" class="node">
<title>pytest_cache_assert._check_assert.converter.Converter</title>
<polygon fill="none" stroke="black" points="2247.5,-16 2247.5,-100 2381.5,-100 2381.5,-16 2247.5,-16"/>
<text text-anchor="middle" x="2314.5" y="-84.8" font-family="Times,serif" font-size="14.00">Converter</text>
<polyline fill="none" stroke="black" points="2247.5,-77 2381.5,-77 "/>
<text text-anchor="start" x="2255.5" y="-61.8" font-family="Times,serif" font-size="14.00">func : Callable</text>
<text text-anchor="start" x="2255.5" y="-46.8" font-family="Times,serif" font-size="14.00">types : List[Any]</text>
<polyline fill="none" stroke="black" points="2247.5,-39 2381.5,-39 "/>
<text text-anchor="middle" x="2314.5" y="-23.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.DictDiffValidator -->
<g id="node9" class="node">
<title>pytest_cache_assert._check_assert.validator.DictDiffValidator</title>
<polygon fill="none" stroke="black" points="2399.5,-23 2399.5,-93 2539.5,-93 2539.5,-23 2399.5,-23"/>
<text text-anchor="middle" x="2469.5" y="-77.8" font-family="Times,serif" font-size="14.00">DictDiffValidator</text>
<polyline fill="none" stroke="black" points="2399.5,-70 2539.5,-70 "/>
<polyline fill="none" stroke="black" points="2399.5,-46 2539.5,-46 "/>
<text text-anchor="start" x="2407.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.differ.DiffResults -->
<g id="node10" class="node">
<title>pytest_cache_assert._check_assert.differ.DiffResults</title>
<polygon fill="none" stroke="black" points="2557.5,-16 2557.5,-100 2939.5,-100 2939.5,-16 2557.5,-16"/>
<text text-anchor="middle" x="2748.5" y="-84.8" font-family="Times,serif" font-size="14.00">DiffResults</text>
<polyline fill="none" stroke="black" points="2557.5,-77 2939.5,-77 "/>
<text text-anchor="start" x="2565.5" y="-61.8" font-family="Times,serif" font-size="14.00">results : Dict, dict</text>
<polyline fill="none" stroke="black" points="2557.5,-54 2939.5,-54 "/>
<text text-anchor="start" x="2565.5" y="-38.8" font-family="Times,serif" font-size="14.00">append(assert_rule: AssertRule, result: Dict): None</text>
<text text-anchor="start" x="2565.5" y="-23.8" font-family="Times,serif" font-size="14.00">to_dict(): Dict</text>
</g>
<!-- pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore -->
<g id="node11" class="node">
<title>pytest_cache_assert._check_assert.cache_store.LocalJSONCacheStore</title>
<polygon fill="none" stroke="black" points="2958,-0.5 2958,-115.5 3587,-115.5 3587,-0.5 2958,-0.5"/>
<text text-anchor="middle" x="3272.5" y="-100.3" font-family="Times,serif" font-size="14.00">LocalJSONCacheStore</text>
<polyline fill="none" stroke="black" points="2958,-92.5 3587,-92.5 "/>
<polyline fill="none" stroke="black" points="2958,-68.5 3587,-68.5 "/>
<text text-anchor="start" x="2966" y="-53.3" font-family="Times,serif" font-size="14.00">initialize(path_cache_dir: Optional[Path], converters: Optional[List[Converter]]): None</text>
<text text-anchor="start" x="2966" y="-38.3" font-family="Times,serif" font-size="14.00">read_cached_data(path_cache_file: Path): Any</text>
<text text-anchor="start" x="2966" y="-23.3" font-family="Times,serif" font-size="14.00">serialize(data: Any): Any</text>
<text text-anchor="start" x="2966" y="-8.3" font-family="Times,serif" font-size="14.00">write(path_cache_file: Path): None</text>
</g>
<!-- pytest_cache_assert._check_assert.config.MissingConfigItemError -->
<g id="node12" class="node">
<title>pytest_cache_assert._check_assert.config.MissingConfigItemError</title>
<polygon fill="none" stroke="black" points="3605,-23 3605,-93 3796,-93 3796,-23 3605,-23"/>
<text text-anchor="middle" x="3700.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">MissingConfigItemError</text>
<polyline fill="none" stroke="black" points="3605,-70 3796,-70 "/>
<polyline fill="none" stroke="black" points="3605,-46 3796,-46 "/>
<text text-anchor="middle" x="3700.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.NoCacheError -->
<g id="node13" class="node">
<title>pytest_cache_assert._check_assert.error_message.NoCacheError</title>
<polygon fill="none" stroke="black" points="3814,-23 3814,-93 3933,-93 3933,-23 3814,-23"/>
<text text-anchor="middle" x="3873.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">NoCacheError</text>
<polyline fill="none" stroke="black" points="3814,-70 3933,-70 "/>
<polyline fill="none" stroke="black" points="3814,-46 3933,-46 "/>
<text text-anchor="middle" x="3873.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.constants.NotFound -->
<g id="node14" class="node">
<title>pytest_cache_assert._check_assert.constants.NotFound</title>
<polygon fill="none" stroke="black" points="3951,-23 3951,-93 4038,-93 4038,-23 3951,-23"/>
<text text-anchor="middle" x="3994.5" y="-77.8" font-family="Times,serif" font-size="14.00">NotFound</text>
<polyline fill="none" stroke="black" points="3951,-70 4038,-70 "/>
<polyline fill="none" stroke="black" points="3951,-46 4038,-46 "/>
<text text-anchor="middle" x="3994.5" y="-30.8" font-family="Times,serif" font-size="14.00"> </text>
</g>
<!-- pytest_cache_assert._check_assert.error_message.RichAssertionError -->
<g id="node15" class="node">
<title>pytest_cache_assert._check_assert.error_message.RichAssertionError</title>
<polygon fill="none" stroke="black" points="4056,-23.5 4056,-92.5 4791,-92.5 4791,-23.5 4056,-23.5"/>
<text text-anchor="middle" x="4423.5" y="-77.3" font-family="Times,serif" font-size="14.00" fill="red">RichAssertionError</text>
<polyline fill="none" stroke="black" points="4056,-69.5 4791,-69.5 "/>
<text text-anchor="start" x="4064" y="-54.3" font-family="Times,serif" font-size="14.00" fill="red">error_info : NoneType</text>
<polyline fill="none" stroke="black" points="4056,-46.5 4791,-46.5 "/>
<text text-anchor="start" x="4064" y="-31.3" font-family="Times,serif" font-size="14.00" fill="red">create_message(test_data: Any, cached_data: Any, path_cache_file: Path, diff_results: DiffResults): str</text>
</g>
<!-- pytest_cache_assert.plugin.TestMetadata -->
<g id="node16" class="node">
<title>pytest_cache_assert.plugin.TestMetadata</title>
<polygon fill="none" stroke="black" points="4809,-8.5 4809,-107.5 5336,-107.5 5336,-8.5 4809,-8.5"/>
<text text-anchor="middle" x="5072.5" y="-92.3" font-family="Times,serif" font-size="14.00">TestMetadata</text>
<polyline fill="none" stroke="black" points="4809,-84.5 5336,-84.5 "/>
<text text-anchor="start" x="4817" y="-69.3" font-family="Times,serif" font-size="14.00">func_args : Union[Dict, Iterable]</text>
<text text-anchor="start" x="4817" y="-54.3" font-family="Times,serif" font-size="14.00">test_file : str</text>
<text text-anchor="start" x="4817" y="-39.3" font-family="Times,serif" font-size="14.00">test_name : str</text>
<polyline fill="none" stroke="black" points="4809,-31.5 5336,-31.5 "/>
<text text-anchor="start" x="4817" y="-16.3" font-family="Times,serif" font-size="14.00">from_pytest(request: FixtureRequest, rel_test_file: Path): TestMetadata</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer.Unconvertable -->
<g id="node17" class="node">
<title>pytest_cache_assert._check_assert.serializer.Unconvertable</title>
<polygon fill="none" stroke="black" points="5354.5,-23 5354.5,-93 5476.5,-93 5476.5,-23 5354.5,-23"/>
<text text-anchor="middle" x="5415.5" y="-77.8" font-family="Times,serif" font-size="14.00" fill="red">Unconvertable</text>
<polyline fill="none" stroke="black" points="5354.5,-70 5476.5,-70 "/>
<polyline fill="none" stroke="black" points="5354.5,-46 5476.5,-46 "/>
<text text-anchor="middle" x="5415.5" y="-30.8" font-family="Times,serif" font-size="14.00" fill="red"> </text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType -->
<g id="node18" class="node">
<title>pytest_cache_assert._check_assert.validator.ValidatorType</title>
<polygon fill="none" stroke="black" points="647.5,-23 647.5,-93 787.5,-93 787.5,-23 647.5,-23"/>
<text text-anchor="middle" x="717.5" y="-77.8" font-family="Times,serif" font-size="14.00">ValidatorType</text>
<polyline fill="none" stroke="black" points="647.5,-70 787.5,-70 "/>
<polyline fill="none" stroke="black" points="647.5,-46 787.5,-46 "/>
<text text-anchor="start" x="655.5" y="-30.8" font-family="Times,serif" font-size="14.00">assertion(): None</text>
</g>
<!-- pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig -->
<g id="edge2" class="edge">
<title>pytest_cache_assert._check_assert.validator.ValidatorType&#45;&gt;pytest_cache_assert._check_assert.assert_config.AssertConfig</title>
<path fill="none" stroke="black" d="M677.11,-93.39C654.86,-112.34 626.39,-136.58 599.56,-159.42"/>
<polygon fill="black" stroke="black" points="599.29,-159.65 597.31,-166.59 590.15,-167.43 592.13,-160.5 599.29,-159.65"/>
<text text-anchor="middle" x="660.5" y="-137.8" font-family="Times,serif" font-size="14.00" fill="green">validator</text>
</g>
<!-- pytest_cache_assert._check_assert.assert_rules.Wild -->
<g id="node19" class="node">
<title>pytest_cache_assert._check_assert.assert_rules.Wild</title>
<polygon fill="none" stroke="black" points="5495,-0.5 5495,-115.5 5790,-115.5 5790,-0.5 5495,-0.5"/>
<text text-anchor="middle" x="5642.5" y="-100.3" font-family="Times,serif" font-size="14.00">Wild</text>
<polyline fill="none" stroke="black" points="5495,-92.5 5790,-92.5 "/>
<polyline fill="none" stroke="black" points="5495,-68.5 5790,-68.5 "/>
<text text-anchor="start" x="5503" y="-53.3" font-family="Times,serif" font-size="14.00">build(inner_pattern: str, count: int): str</text>
<text text-anchor="start" x="5503" y="-38.3" font-family="Times,serif" font-size="14.00">index(count: int): str</text>
<text text-anchor="start" x="5503" y="-23.3" font-family="Times,serif" font-size="14.00">keys(count: int): str</text>
<text text-anchor="start" x="5503" y="-8.3" font-family="Times,serif" font-size="14.00">recur(count: int): str</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._CacheAssertSerializer -->
<g id="node20" class="node">
<title>pytest_cache_assert._check_assert.serializer._CacheAssertSerializer</title>
<polygon fill="none" stroke="black" points="5808.5,-23 5808.5,-93 5990.5,-93 5990.5,-23 5808.5,-23"/>
<text text-anchor="middle" x="5899.5" y="-77.8" font-family="Times,serif" font-size="14.00">_CacheAssertSerializer</text>
<polyline fill="none" stroke="black" points="5808.5,-70 5990.5,-70 "/>
<polyline fill="none" stroke="black" points="5808.5,-46 5990.5,-46 "/>
<text text-anchor="start" x="5816.5" y="-30.8" font-family="Times,serif" font-size="14.00">default(obj: Any): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.config._ConfigContainer -->
<g id="node21" class="node">
<title>pytest_cache_assert._check_assert.config._ConfigContainer</title>
<polygon fill="none" stroke="black" points="6009,-16 6009,-100 6472,-100 6472,-16 6009,-16"/>
<text text-anchor="middle" x="6240.5" y="-84.8" font-family="Times,serif" font-size="14.00">_ConfigContainer</text>
<polyline fill="none" stroke="black" points="6009,-77 6472,-77 "/>
<text text-anchor="start" x="6017" y="-61.8" font-family="Times,serif" font-size="14.00">data : Dict[str, Any]</text>
<polyline fill="none" stroke="black" points="6009,-54 6472,-54 "/>
<text text-anchor="start" x="6017" y="-38.8" font-family="Times,serif" font-size="14.00">register(key: CacheAssertContainerKeys, instance: Any): None</text>
<text text-anchor="start" x="6017" y="-23.8" font-family="Times,serif" font-size="14.00">retrieve(key: CacheAssertContainerKeys): Any</text>
</g>
<!-- pytest_cache_assert._check_assert.serializer._Converters -->
<g id="node22" class="node">
<title>pytest_cache_assert._check_assert.serializer._Converters</title>
<polygon fill="none" stroke="black" points="6490.5,-1 6490.5,-115 6930.5,-115 6930.5,-1 6490.5,-1"/>
<text text-anchor="middle" x="6710.5" y="-99.8" font-family="Times,serif" font-size="14.00">_Converters</text>
<polyline fill="none" stroke="black" points="6490.5,-92 6930.5,-92 "/>
<text text-anchor="start" x="6498.5" y="-76.8" font-family="Times,serif" font-size="14.00">converter_lookup : Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="6498.5" y="-61.8" font-family="Times,serif" font-size="14.00">converter_lookup : dict, defaultdict</text>
<text text-anchor="start" x="6498.5" y="-46.8" font-family="Times,serif" font-size="14.00">converters : List[Tuple[Any, T_CONVERTER]]</text>
<polyline fill="none" stroke="black" points="6490.5,-39 6930.5,-39 "/>
<text text-anchor="start" x="6498.5" y="-23.8" font-family="Times,serif" font-size="14.00">get_lookup(): Dict[Any, List[T_CONVERTER]]</text>
<text text-anchor="start" x="6498.5" y="-8.8" font-family="Times,serif" font-size="14.00">register(types: List[Any], converter: T_CONVERTER): None</text>
</g>
</g>
</svg>
